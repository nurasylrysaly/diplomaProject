<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8" />
    <meta http-equiv="X-UA-Compatible" content="IE=edge" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.2/css/all.min.css"
          integrity="sha512-HK5fgLBL+xu6dm/Ii3z4xhlSUyZgTT9tuc/hSrtw6uzJOvgRr2a9jyxxT1ely+B+xFAmJKVSTbpM/CuL7qxO8w==" crossorigin="anonymous"/>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.0.0-beta2/dist/css/bootstrap.min.css" rel="stylesheet"
          integrity="sha384-BmbxuPwQa2lc/FVzBcNJ7UAyJxM6wuqIj61tLrc4wSX0szH/Ev+nYRRuWlolflfl" crossorigin="anonymous" />
    <link rel="stylesheet" type="text/css" href="css/map.css" />
    <link rel="stylesheet" href="css/layout.css" />
    <title>Map</title>
    <style>
        html,
        body,
        #container {
            margin: 0;
            width: 100%;
            height: 100%;
            overflow: hidden;
        }
        #reset {
            padding: 4px 10px;
            background: #00a81f;
            border-radius: 4px;
            box-shadow: 0 1px 3px 0 rgba(38, 38, 38, 0.5);
            border: none;
            color: #fff;
            font-size: 12px;
            cursor: pointer;
        }
    </style>
    <link rel="stylesheet" href="https://unpkg.com/leaflet/dist/leaflet.css" />
</head>
<body>

    <%- include("includes/navbar.ejs") %>

    <div id="container"></div>
        <script src="https://mapgl.2gis.com/api/js/v1"></script>
        <script src="https://unpkg.com/@2gis/mapgl-directions@^2/dist/directions.js"></script>
        <script>
            const map = new mapgl.Map('container', {
                center: [71.42222, 51.14722],
                zoom: 13,
                key: 'd593ed8d-ae13-43cd-85c2-4237a688cf02',
            })

            const markers = [];

            let firstPoint;
            let secondPoint;
            // A current selecting point
            let selecting = 'a';

            const controlsHtml = `<button id="reset">Reset points</button> `;
            new mapgl.Control(map, controlsHtml, {
                position: 'topLeft',
            });
            const resetButton = document.getElementById('reset');

            resetButton.addEventListener('click', function() {
                selecting = 'a';
                firstPoint = undefined;
                secondPoint = undefined;
                directions.clear();
            });

            map.on('click', async (e) => {
                const coords = e.lngLat;

                if (selecting != 'end') {
                    // Just to visualize selected points, before the route is done
                    markers.push(
                        new mapgl.Marker(map, {
                            coordinates: coords,
                            icon: 'https://docs.2gis.com/img/dotMarker.svg',
                        }),
                    );
                }

                if (selecting === 'a') {
                    firstPoint = coords;
                    selecting = 'b';
                } else if (selecting === 'b') {
                    secondPoint = coords;
                    selecting = 'end';
                }

                // If all points are selected â€” we can draw the route
                if (firstPoint && secondPoint) {
                    const url = 'https://routing.api.2gis.com/public_transport/2.0?key=d593ed8d-ae13-43cd-85c2-4237a688cf02';
                    const data = {
                    locale: "kz",
                    source: {
                        name: "Point A",
                        point: {
                            lat: firstPoint[1],
                            lon: firstPoint[0]
                        }
                    },
                    target: {
                        name: "Point B",
                        point: {
                            lat: secondPoint[1],
                            lon: secondPoint[0]
                        }
                    },
                    transport: ["bus"]
                };

                    try {
                        const response = await fetch(url, {
                            method: 'POST',
                            headers: {
                                'Content-Type': 'application/json'
                            },
                            body: JSON.stringify(data)
                        });

                        if (!response.ok) {
                            throw new Error('Network response was not ok');
                        }

                        const jsonResponse = await response.json();
                        console.log('Response:', jsonResponse);
                    } catch (error) {
                        console.error('There was a problem with the fetch operation:', error);
                    }
                }
            });
        </script>
        
    <!-- <script src="https://unpkg.com/leaflet/dist/leaflet.js"></script>
    <script src="/socket.io/socket.io.js"></script>
    <script>
        const map = L.map('map').setView([51.169392, 71.449074], 12); // Center map on Astana

        L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
            attribution: '&copy; <a href="https://www.openstreetmap.org/copyright">OpenStreetMap</a> contributors'
        }).addTo(map);

        const socket = io();
        const markers = {};

        socket.on('busData', (data) => {
            console.log('Bus Data:', data); // Log data to verify format
            data.forEach(bus => {
                const { id, lat, lon } = bus; // Ensure these keys match the actual data
                if (!markers[id]) {
                    markers[id] = L.marker([lat, lon]).addTo(map);
                } else {
                    markers[id].setLatLng([lat, lon]);
                }
            });
        });
    </script> --> 

<%- include("includes/footer.ejs") %>

</body>
</html>
